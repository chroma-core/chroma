// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	model "github.com/chroma-core/chroma/go/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// CollectionMetadataValueType is an autogenerated mock type for the CollectionMetadataValueType type
type CollectionMetadataValueType struct {
	mock.Mock
}

// Equals provides a mock function with given fields: other
func (_m *CollectionMetadataValueType) Equals(other model.CollectionMetadataValueType) bool {
	ret := _m.Called(other)

	if len(ret) == 0 {
		panic("no return value specified for Equals")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(model.CollectionMetadataValueType) bool); ok {
		r0 = rf(other)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsCollectionMetadataValueType provides a mock function with given fields:
func (_m *CollectionMetadataValueType) IsCollectionMetadataValueType() {
	_m.Called()
}

// NewCollectionMetadataValueType creates a new instance of CollectionMetadataValueType. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCollectionMetadataValueType(t interface {
	mock.TestingT
	Cleanup(func())
}) *CollectionMetadataValueType {
	mock := &CollectionMetadataValueType{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
