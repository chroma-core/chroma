import { StreamableValue } from "ai/rsc";

export type TweetStatus = "created" | "processing" | "done" | "error";

export type Role = "user" | "assistant";

/**
 * A post. 1:1 correspondence with an entry in the Chroma collection.
 */
export interface TweetModelBase {
  type: 'base';
  threadParentId?: string
  id: string;
  role: Role;
  body: string;
  citations: string[];
  date: number;
  status?: TweetStatus;

  aiReplyId?: string;
}

export type TweetStreamStates = "--BEGIN--" | "--CITATIONS--" | "--BODY--" | "--END--" | "--ERROR--";

/**
 * A post that has been partially generated by the AI, and contains
 * streams for its contents as it is being generated.
 */
export interface PartialAssistantPost extends TweetModelBase {
  stream?: StreamableValue<string, any>;
}

/**
 * A post that has been enriched with its related posts.
 * This is returned by certain API endpoints such that the client
 * doesn't have to make additional requests to get the related posts.
 */
export interface EnrichedTweetModel extends Omit<TweetModelBase, 'type'> {
  type: 'enriched';
  enrichedAiReply?: TweetModelBase;
  enrichedCitations: TweetModelBase[];
}

export interface UserWithStreamingAIResponseTweetModel extends Omit<TweetModelBase, 'type'> {
  type: 'streaming';
  aiReply?: PartialAssistantPost | undefined;
}

export type TweetModel = TweetModelBase | EnrichedTweetModel | UserWithStreamingAIResponseTweetModel;
export type NewPostResponseTweetModel = TweetModelBase | UserWithStreamingAIResponseTweetModel;
