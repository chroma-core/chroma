/* eslint-disable */
// tslint:disable
/**
 * FastAPI
 *
 *
 * OpenAPI spec version: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

export namespace Api {
  export interface Add201Response {}

  export interface AddEmbedding {
    embeddings?: Api.AddEmbedding.Embedding[] | null;
    metadatas?: (Api.AddEmbedding.Metadatum | null)[] | null;
    documents?: (string | null)[] | null;
    uris?: (string | null)[] | null;
    ids: string[];
  }

  /**
   * @export
   * @namespace AddEmbedding
   */
  export namespace AddEmbedding {
    export interface Embedding {}

    export interface Metadatum {}
  }

  export interface ADelete200Response {}

  export interface AGet200Response {}

  export interface Count200Response {}

  export interface CountCollections200Response {}

  export interface CreateCollection {
    name: string;
    metadata?: Api.CreateCollection.Metadata | null;
    get_or_create?: boolean;
  }

  /**
   * @export
   * @namespace CreateCollection
   */
  export namespace CreateCollection {
    export interface Metadata {}
  }

  export interface CreateCollection200Response {}

  export interface CreateDatabase {
    name: string;
  }

  export interface CreateDatabase200Response {}

  export interface CreateTenant {
    name: string;
  }

  export interface CreateTenant200Response {}

  export interface DeleteCollection200Response {}

  export interface DeleteEmbedding {
    ids?: string[] | null;
    where?: Api.DeleteEmbedding.Where | null;
    where_document?: Api.DeleteEmbedding.WhereDocument | null;
  }

  /**
   * @export
   * @namespace DeleteEmbedding
   */
  export namespace DeleteEmbedding {
    export interface Where {}

    export interface WhereDocument {}
  }

  export interface GetCollection200Response {}

  export interface GetDatabase200Response {}

  export interface GetEmbedding {
    ids?: string[] | null;
    where?: Api.GetEmbedding.Where | null;
    where_document?: Api.GetEmbedding.WhereDocument | null;
    sort?: string | null;
    /**
     * @type {number | null}
     * @memberof GetEmbedding
     */
    limit?: number | null;
    /**
     * @type {number | null}
     * @memberof GetEmbedding
     */
    offset?: number | null;
    include?: Api.IncludeEnum[];
  }

  /**
   * @export
   * @namespace GetEmbedding
   */
  export namespace GetEmbedding {
    export interface Where {}

    export interface WhereDocument {}
  }

  export interface GetNearestNeighbors200Response {}

  export interface GetTenant200Response {}

  export interface HTTPValidationError {
    detail?: Api.ValidationError[];
  }

  export enum IncludeEnum {
    Documents = "documents",
    Embeddings = "embeddings",
    Metadatas = "metadatas",
    Distances = "distances",
    Uris = "uris",
    Data = "data",
  }

  export interface ListCollections200Response {}

  export interface PreFlightChecks200Response {}

  export interface QueryEmbedding {
    where?: Api.QueryEmbedding.Where | null;
    where_document?: Api.QueryEmbedding.WhereDocument | null;
    query_embeddings: Api.QueryEmbedding.QueryEmbedding2[];
    /**
     * @type {number}
     * @memberof QueryEmbedding
     */
    n_results?: number;
    include?: Api.IncludeEnum[];
  }

  /**
   * @export
   * @namespace QueryEmbedding
   */
  export namespace QueryEmbedding {
    export interface Where {}

    export interface WhereDocument {}

    export interface QueryEmbedding2 {}
  }

  export interface Update200Response {}

  export interface UpdateCollection {
    new_name?: string | null;
    new_metadata?: Api.UpdateCollection.NewMetadata | null;
  }

  /**
   * @export
   * @namespace UpdateCollection
   */
  export namespace UpdateCollection {
    export interface NewMetadata {}
  }

  export interface UpdateCollection200Response {}

  export interface UpdateEmbedding {
    embeddings?: Api.UpdateEmbedding.Embedding[] | null;
    metadatas?: (Api.UpdateEmbedding.Metadatum | null)[] | null;
    documents?: (string | null)[] | null;
    uris?: (string | null)[] | null;
    ids: string[];
  }

  /**
   * @export
   * @namespace UpdateEmbedding
   */
  export namespace UpdateEmbedding {
    export interface Embedding {}

    export interface Metadatum {}
  }

  export interface Upsert200Response {}

  export interface ValidationError {
    loc: (string | number)[];
    msg: string;
    type: string;
  }
}
