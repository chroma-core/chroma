[package]
name = "worker"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "query_service"
path = "src/bin/query_service.rs"

[[bin]]
name = "compaction_service"
path = "src/bin/compaction_service.rs"

[dependencies]
rand = "0.8.5"
murmur3 = "0.5.2"
schemars = "0.8.21"
kube = { version = "0.87.2", features = ["runtime", "derive"] }
k8s-openapi = { version = "0.20.0", features = ["latest"] }
tracing-bunyan-formatter = "0.3"
tracing-opentelemetry = "0.28.0"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
opentelemetry = { version = "0.27.0", default-features = false, features = [
  "trace",
  "metrics",
] }
opentelemetry-otlp = "0.27"
opentelemetry_sdk = { version = "0.27", features = ["rt-tokio"] }
regex = "1.11.1"
figment = { version = "0.10.19", features = ["env", "yaml", "test"] }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = "0.6"

serde = { workspace = true }
serde_json = { workspace = true }
arrow = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }
async-trait = { workspace = true }
roaring = { workspace = true }
futures = { workspace = true }
parking_lot = { workspace = true }
tracing = { workspace = true }
tokio = { workspace = true }
tokio-util = { workspace = true }
tonic = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
num_cpus = { workspace = true }
flatbuffers = { workspace = true }
tantivy = { workspace = true }

chroma-blockstore = { workspace = true }
chroma-error = { workspace = true }
chroma-config = { workspace = true }
chroma-storage = { workspace = true }
chroma-types = { workspace = true }
chroma-cache = { workspace = true }
chroma-index = { workspace = true }
chroma-distance = { workspace = true }

[dev-dependencies]
random-port = "0.1.1"
serial_test = "3.2.0"

rand = { workspace = true }
rand_xorshift = { workspace = true }
tempfile = { workspace = true }
shuttle = { workspace = true }
proptest = { workspace = true }
proptest-state-machine = { workspace = true }
criterion = { workspace = true }

chroma-benchmark = { workspace = true }

[[bench]]
name = "filter"
harness = false

[[bench]]
name = "limit"
harness = false
