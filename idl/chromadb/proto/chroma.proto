syntax = "proto3";

package chroma;

option go_package = "github.com/chroma-core/chroma/go/pkg/proto/coordinatorpb";

// Types here should mirror chromadb/types.py
enum Operation {
    ADD = 0;
    UPDATE = 1;
    UPSERT = 2;
    DELETE = 3;
}

enum ScalarEncoding {
    FLOAT32 = 0;
    INT32 = 1;
}

message Vector {
    int32 dimension = 1;
    bytes vector = 2;
    ScalarEncoding encoding = 3;
}

enum SegmentScope {
    VECTOR = 0;
    METADATA = 1;
    RECORD = 2;
    SQLITE = 3;
}

message FilePaths {
    repeated string paths = 1;
}

message Segment {
    string id = 1;
    string type = 2;
    SegmentScope scope = 3;
    string collection = 5;
    optional UpdateMetadata metadata = 6;
    map<string,FilePaths> file_paths = 7;
}

message Collection {
  string id = 1;
  string name = 2;
  string configuration_json_str = 3;
  optional UpdateMetadata metadata = 4;
  optional int32 dimension = 5;
  string tenant = 6;
  string database = 7;
  int64 log_position = 8;
  int32 version = 9;
  uint64 total_records_post_compaction = 10;
}

message Database {
    string id = 1;
    string name = 2;
    string tenant = 3;
}

message Tenant {
    string name = 1;
}

message UpdateMetadataValue {
    // Not set if user wants to delete the key.
    // TODO(Sanket): Should we make this more explicit?
    oneof value {
        string string_value = 1;
        int64 int_value = 2;
        double float_value = 3;
        bool bool_value = 4;
    }
}

message UpdateMetadata {
    map<string, UpdateMetadataValue> metadata = 1;
}

// Represents an operation the user submits
message OperationRecord {
    string id = 1;
    optional Vector vector = 2;
    optional UpdateMetadata metadata = 3;
    Operation operation = 4;
}
