name: Maturin build

on:
  pull_request:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: depot-ubuntu-22.04
            target: x86_64
          - runner: depot-ubuntu-22.04
            target: x86
          - runner: depot-ubuntu-22.04-arm
            target: aarch64
          - runner: depot-ubuntu-22.04
            target: armv7
          - runner: depot-ubuntu-22.04
            target: s390x
          - runner: depot-ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
          working-directory: rust/python_bindings
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
          manylinux: auto
          working-directory: rust/python_bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: depot-ubuntu-22.04
            target: x86_64
          - runner: depot-ubuntu-22.04
            target: x86
          - runner: depot-ubuntu-22.04-arm
            target: aarch64
          - runner: depot-ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: rust/python_bindings
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
          manylinux: musllinux_1_2
          working-directory: rust/python_bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: rust/python_bindings
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
          working-directory: rust/python_bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: depot-macos-13
            target: x86_64
          - runner: depot-macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          working-directory: rust/python_bindings
      - name: Build free-threaded wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i python3.13t
          sccache: 'true'
          working-directory: rust/python_bindings
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: rust/python_bindings
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
  #   needs: [linux, musllinux, windows, macos, sdist]
  #   permissions:
  #     # Use to sign the release artifacts
  #     id-token: write
  #     # Used to upload release artifacts
  #     contents: write
  #     # Used to generate artifact attestation
  #     attestations: write
  #   steps:
  #     - uses: actions/download-artifact@v4
  #     - name: Generate artifact attestation
  #       uses: actions/attest-build-provenance@v1
  #       with:
  #         subject-path: 'wheels-*/*'
  #     - name: Publish to PyPI
  #       if: ${{ startsWith(github.ref, 'refs/tags/') }}
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --non-interactive --skip-existing wheels-*/*
